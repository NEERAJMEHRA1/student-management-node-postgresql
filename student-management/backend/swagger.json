{
    "openapi": "3.0.0",
    "info": {
        "title": "Student Management API",
        "version": "1.0.0",
        "description": "API for managing students and their marks using Node.js, Express, Prisma, and PostgreSQL."
    },
    "servers": [
        {
            "url": "http://localhost:5000"
        }
    ],
    "security": [
        {
            "bearerAuth": []
        }
    ],
    "paths": {
        "/auth/register": {
            "post": {
                "tags": [
                    "AUTH"
                ],
                "summary": "Method used to register",
                "security": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "contentType"
                                ],
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "default": "test@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "default": "****"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error"
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "tags": [
                    "AUTH"
                ],
                "summary": "Method used login user",
                "security": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "contentType"
                                ],
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "default": "test@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "default": "12345678"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error"
                    }
                }
            }
        },
        "/api/get-student-list": {
            "get": {
                "summary": "Get all students with pagination",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of students"
                    }
                }
            }
        },
        "/api/create-student": {
            "post": {
                "summary": "Create a new student",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StudentInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Student created"
                    },
                    "400": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/get-students/{id}": {
            "get": {
                "summary": "Get a student by ID (with marks)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Student found"
                    },
                    "404": {
                        "description": "Student not found"
                    }
                }
            }
        },
        "/api/update-student/{id}": {
            "put": {
                "summary": "Update student by ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StudentInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Student updated"
                    },
                    "404": {
                        "description": "Student not found"
                    }
                }
            }
        },
        "/api/delete-student/{id}": {
            "delete": {
                "summary": "Delete student by ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Student deleted"
                    },
                    "404": {
                        "description": "Student not found"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "schemas": {
            "StudentInput": {
                "type": "object",
                "required": [
                    "name",
                    "email",
                    "age"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Neeraj Mehra"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "neeraj@example.com"
                    },
                    "age": {
                        "type": "integer",
                        "example": 22
                    }
                }
            }
        }
    }
}